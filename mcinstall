#!/bin/bash
#---- This is a install file for running of MCPCUS
#---- a monte carlo parckage developed
#---- at Sichuan University

 
#---- Some Vars that users can modify ----
TINYCCPATH=$PWD/tcc-0.9.27/

#------------------------------
VER=CalCapture_2020_12_01
FULLNAME=mcpscu_$VER 
tar -xvf $FULLNAME.tar.bz2

#---- set the running environment
OS=LINUX
OSVER=$(cat /proc/version | head -c 5)
if [ "$OSVER" = "CYGWI" ]; then
  OS=CYGWIN
fi

if [ "$OSVER" = "Linux" ]; then
  OS=LINUX
fi

#It is important to write the CUDA version and COMPUTCAPABILITY, or it would cause fatal error
if [ "$CUDAV" != "" ]; then
  CUDAVERSION='cuda'$CUDAV
else
  CUDAVERSION=cuda8.0
fi
if [ "$CUDAC" != "" ]; then
  L=${CUDAC%.*}
  R=${CUDAC#*.}
  COMPUTCAPABILITY='cc'$L$R
else
  COMPUTCAPABILITY=cc35
fi

echo 'The default CUDA version is: ' $CUDAVERSION ' ,the computer capability is: ' $COMPUTCAPABILITY
echo -n 'Reset CUDA Version and computer capability (y/n)?'
read Y
if [ "$Y" = "y" ]; then
  echo -n 'Please input the CUDA version (xx.x for instance 9.0 , 10.0) '
  read -e CUDAV
  export CUDAV
  echo -n 'Please input the computer capability (x.x for instance 2.x , 3.0 , 7.0)'
  read -e CUDAC
  export CUDAC

  echo -n 'Set these changing to .bashrc file (y/n)?'
  read Y
  if [ "$Y" = "y" ]; then
    echo "#---The environment for CUDA Driver---" >> $HOME/.bashrc
    echo "CUDAV=$CUDAV; export CUDAV" >> $HOME/.bashrc
    echo "CUDAC=$CUDAC; export CUDAC" >> $HOME/.bashrc
    echo "#---End environment for CUDA Driver---" >> $HOME/.bashrc
  fi

  CUDAVERSION='cuda'$CUDAV
  L=${CUDAC%.*}
  R=${CUDAC#*.}
  COMPUTCAPABILITY='cc'$L$R

  echo 'The current CUDA version is: ' $CUDAVERSION ' ,the computer capability is: ' $COMPUTCAPABILITY
fi

#---- set the PGI compiler vars ---
if [ "$PGI" = "" ]; then
  if [ "$OS" = "LINUX" ]; then
    PGI=/opt/pgi
  fi
  
  if [ "$OS" = "CYGWIN" ]; then
	PGI=/c/PROGRA~1/PGI/
  fi
fi
echo 'The default PGI path is' $PGI
echo -n 'Reset the PGI path(y/n)?'
read Y
if [ "$Y" = "y" ]; then
  echo -n 'Please input the path for PGI (for instance /opt/pgi/ or C:PROGRA~1): '
  read -e PGI
fi
PGI=$PGI
export PGI      #or use export PGI=$PGI

if [ "$PGIVER" = "" ]; then
  PGIVER=17.4
fi
echo 'the default pgi version is ' $PGIVER
echo -n 'Reset the PGI version (y/n)?'
read Y
if [ "$Y" = "y" ]; then
  echo -n 'Please input the PGI version (for instance 19.4 not the 2019.4): '
  read -e PGIVER
fi

L=${PGIVER%.*}
R=${PGIVER#*.}
if [ "$OS" = "LINUX" ]; then
  PGIADDINPATH="$PGI/linux86-64/$L.$R/bin":"$PGI/linux86-64/20$L/include";
fi

if [ "$OS" = "CYGWIN" ]; then
  PGIADDINPATH="$PGI/win64/$L.$R/bin":"$PGI/win64/20$L/include";
fi

PATH=$PGIADDINPATH:$PATH;
export PATH=$PATH
echo 'The current PGI path is' $PGI ', the pgi version is ' $PGIVER

echo -n 'Set PGI pth and version changing to .bashrc file (y/n)?'
read SETPATHTOENV
if [ "$SETPATHTOENV" = "y" ]; then
  echo "#---The environment for PGI compiler---" >>$HOME/.bashrc
  echo "PGI=$PGI; export PGI" >>$HOME/.bashrc
  echo "PGIVER=$PGIVER; export PGIVER" >>$HOME/.bashrc
  echo "PGIADDINPATH=$PGIADDINPATH; export PGIADDINPATH" >>$HOME/.bashrc
  echo "PATH=\$PATH:\$PGIADDINPATH; export PATH" >> $HOME/.bashrc
  echo "#---End environment for PGI compiler---" >>$HOME/.bashrc
fi

MCPSCUINST=$PWD
MCPSCUSOR=$MCPSCUINST/$FULLNAME
MCWORKSPACE=$MCPSCUINST/mcworkspace/$FULLNAME
mkdir -p $MCWORKSPACE


echo $MCPSCUSOR/mcbdlib

sed -i '2,10{/version=/d}' $MCPSCUSOR/mcbdlib
sed -i "2i version=""$VER" $MCPSCUSOR/mcbdlib
sed -i '2,10{/version=/d}' $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
sed -i "2i version=""$VER" $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
sed -i '2,10{/version=/d}' $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool
sed -i "2i version=""$VER" $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool

sed -i '2,10{/mcpscusor=/d}' $MCPSCUSOR/mcbdlib
sed -i "3i mcpscusor=""$MCPSCUSOR" $MCPSCUSOR/mcbdlib
sed -i '2,10{/mcpscusor=/d}' $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
sed -i "3i mcpscusor=""$MCPSCUSOR" $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
sed -i '2,10{/mcpscusor=/d}' $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool
sed -i "3i mcpscusor=""$MCPSCUSOR" $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool

sed -i '2,10{/tccpath=/d}' $MCPSCUSOR/mcbdlib
sed -i "4i tccpath=""$TINYCCPATH" $MCPSCUSOR/mcbdlib
sed -i '2,10{/tccpath=/d}' $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
sed -i "4i tccpath=""$TINYCCPATH" $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
sed -i '2,10{/tccpath=/d}' $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool
sed -i "4i tccpath=""$TINYCCPATH" $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool

sed -i '2,10{/mcworkspace=/d}' $MCPSCUSOR/mcbdlib
sed -i "5i mcworkspace=""$MCWORKSPACE" $MCPSCUSOR/mcbdlib
sed -i '2,10{/mcworkspace=/d}' $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
sed -i "5i mcworkspace=""$MCWORKSPACE" $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
sed -i '2,10{/mcworkspace=/d}' $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool
sed -i "5i mcworkspace=""$MCWORKSPACE" $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool

sed -i '2,10{/cudaVersion=/d}' $MCPSCUSOR/mcbdlib
sed -i "6i cudaVersion=""$CUDAVERSION" $MCPSCUSOR/mcbdlib
sed -i '2,10{/cudaVersion=/d}' $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
sed -i "6i cudaVersion=""$CUDAVERSION" $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
sed -i '2,10{/cudaVersion=/d}' $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool
sed -i "6i cudaVersion=""$CUDAVERSION" $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool

sed -i '2,10{/computerCapability=/d}' $MCPSCUSOR/mcbdlib
sed -i "7i computerCapability=""$COMPUTCAPABILITY" $MCPSCUSOR/mcbdlib
sed -i '2,10{/computerCapability=/d}' $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
sed -i "7i computerCapability=""$COMPUTCAPABILITY" $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
sed -i '2,10{/computerCapability=/d}' $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool
sed -i "7i computerCapability=""$COMPUTCAPABILITY" $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool

sed -i '2,10{/operateSystem=/d}' $MCPSCUSOR/mcbdlib
sed -i "8i operateSystem=""$OS" $MCPSCUSOR/mcbdlib
sed -i '2,10{/operateSystem=/d}' $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
sed -i "8i operateSystem=""$OS" $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
sed -i '2,10{/operateSystem=/d}' $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool
sed -i "8i operateSystem=""$OS" $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool

sed -i '2,10{/source/d}' $MCPSCUSOR/mcbdlib
sed -i '2,10{/export/d}' $MCPSCUSOR/mcbdlib
sed -i '2,10{/source/d}' $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
sed -i '2,10{/export/d}' $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
sed -i '2,10{/source/d}' $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool
sed -i '2,10{/export/d}' $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool

if [ "$SETPATHTOENV" = "y" ]; then
  sed -i "9i source $HOME/.bashrc" $MCPSCUSOR/mcbdlib
  sed -i "9i source $HOME/.bashrc" $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
  sed -i "9i source $HOME/.bashrc" $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool
else
  sed -i "9i export PATH=\$PATH:$PGIADDINPATH; export PGI=$PGI" $MCPSCUSOR/mcbdlib
  sed -i "9i export PATH=\$PATH:$PGIADDINPATH; export PGI=$PGI" $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
  sed -i "9i export PATH=\$PATH:$PGIADDINPATH; export PGI=$PGI" $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool
fi

#Based on our test, the compiler option -Mnollvm is also necessary in host code, if not, in centos 7, CUDA10.0 PGICE 19.4, the
#error"PGF90-F-0000-Internal compiler error. bitcaset with differing size -4" would occur
if [ `echo "$PGIVER >= 19.0" |bc` -eq 1 ]; then
  sed -i '2,10{/hostllvm/d}' $MCPSCUSOR/mcbdlib
  sed -i "10i hostllvm=-Mnollvm" $MCPSCUSOR/mcbdlib
  sed -i '2,10{/hostllvm/d}' $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
  sed -i "10i hostllvm=-Mnollvm" $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
  sed -i '2,10{/hostllvm/d}' $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool
  sed -i "10i hostllvm=-Mnollvm" $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool
else
  sed -i '2,10{/hostllvm/d}' $MCPSCUSOR/mcbdlib
  sed -i "10i hostllvm=\"\"" $MCPSCUSOR/mcbdlib
  sed -i '2,10{/hostllvm/d}' $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
  sed -i "10i hostllvm=\"\"" $MCPSCUSOR/MCLIB/sor/APPLICATIONS/mcbdapp
  sed -i '2,10{/hostllvm/d}' $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool
  sed -i "10i hostllvm=\"\"" $MCPSCUSOR/MCLIB/sor/ANALYTOOLS/mcbdtool
fi

#---- create mcworkspace
rm $MCPSCUINST/mcapps
ln -s $MCPSCUSOR/MCLIB/sor/APPLICATIONS $MCPSCUINST/mcapps
rm $MCPSCUINST/mcanaly
ln -s $MCPSCUSOR/MCLIB/sor/ANALYTOOLS $MCPSCUINST/mcanaly

echo $FULLNAME "has been copied on the machine"
echo "You should run $MCPSCUSOR/mcblib to build the library."
echo "Then go to $MCPSCUINST/mcapps or $MCPSCUINST/mcanaly to build the applications or "
echo "analysis tools that you interested."
echo "Use \"mcbdapp+appname\" or \"mcbdtool+toolname\" to construct it."





#----------Old------
#echo "#--- the envirement variables for building MCPSCU" >> ~/.bashrc
#echo "MCPSCUSOR=$MCPSCUINST/$FULLNAME; export MCPSCUSOR" >> ~/.bashrc
#echo "MCPSCUAPP=\$MCPSCUSOR/MCLIB/APPLICATIONS; export MCPSCUAPP" >> ~/.bashrc
#echo "MCPSCUANALY=\$MCPSCUSOR/MCLIB/ANALYTOOLS; export MCPSCUANALY" >> ~/.bashrc
#echo "MCWORKSPACE=$MCPSCUINST/mcworkspace; export MCWORKSPACE" >> ~/.bashrc
#echo "PATH=\$PATH:\$MCPSCUSOR:\$MCPSCUAPP:\$MCPSCUANALY:\$MCWORKSPACE/APPLICATIONS:\$MCWORKSPACE/ANALYTOOLS;" >> ~/.bashrc
##echo "export PATH" >> ~/.bashrc
#echo "#--- end section for MCPSCU" >> ~/.bashrc
